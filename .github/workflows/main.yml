name: Jobs

on: 
  push: { branches: [main] }
  
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
      # Cache
      - name: Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Test
      - name: unityTestRunner
        uses: game-ci/unity-test-runner@v4.1.1
        with:
           githubToken: ${{ secrets.GITHUB_TOKEN }}
           testMode: PlayMode
      # Storing Test Results
      - name: Storing Test Results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results
          path: artifacts
      # Test Report
     # - name: Test Report
     #   uses: dorny/test-reporter@v1
     #   if: success() || failure()    # run this step even if previous step failed
     #   with:
          #artifact: /Test-results-(.*)/
     #     name: Test report             # Name of the check run which will be created
     #     path: playmode-results.xml    # Path to test results
     #     reporter: dotnet-trx       # Format of test results
      # Build
  #buildForAllSupportedPlatforms:
     #   name: Build for ${{ matrix.targetPlatform }}
     #   runs-on: ubuntu-latest
     #   needs: tests
     #   strategy:
     #     fail-fast: false
     #     matrix:
     #       targetPlatform:
     #         - StandaloneWindows # Build a Windows standalone.
     #         - Android # Build an Android .apk standalone app.
         
     #   steps:
     #    - name: Checkout repository
     #      uses: actions/checkout@v4
           
     #    - name: build
     #      uses: game-ci/unity-builder@v4
     #      with:
     #       targetPlatform: ${{ matrix.targetPlatform }}
      # Output
         - name: output
           uses: actions/upload-artifact@v3
           with:
            name: Build-${{ matrix.targetPlatform }}
            path: build/${{ matrix.targetPlatform }}
