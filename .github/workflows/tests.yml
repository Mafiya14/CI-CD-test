name: Jobs

on: 
  push: { branches: [main] }
  
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  #Test
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
      # Cache
      - name: Cache
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      # Test
      - name: unityTestRunner
        uses: game-ci/unity-test-runner@v4.1.1
        with:
           githubToken: ${{ secrets.GITHUB_TOKEN }}
           testMode: PlayMode
      #Upload Test Result
      - name: Upload Test Result
        uses: actions/upload-artifact@v4
        with:
          name: Test-Results
          path: artifacts

  #Test Report
  testReport:
    name: Test Report
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      #Download test result artifact
      - name: Use Test Result Artifact
        uses: actions/download-artifact@v4
        with:
          name: Test-Results
          path: reports/test-results
      #Test Report
      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        if: success() || failure()    # run this step even if previous step failed
        with:
          artifact: Test-Results
          name: Test-Results         # Name of the check run which will be created
          path: artifacts   # Path to test results
          reporter: dotnet-trx        # Format of test results